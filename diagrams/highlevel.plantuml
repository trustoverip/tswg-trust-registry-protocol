@startuml



title Trust Over IP Trust Registry Protocol v2 Data Model - Implementer Review Draft

package EGF {

}



' object Error 
class TrustRegistry {
    EGFURI
    Entity(VID):   Entity
    Registry(VID): Registry
    Resource(VID): Resource
    Registries():  RegistryList
    Resources():   ResourceList
    RegistryMetadata: Metadata
    Lookups()
    OfflineCopy()
}

' class RegistryOfRegistries {
'     FindDID()
'     FindRegistry()
'     ListRegistries()


' }


class Lookup {
    Namespaces()
    VIDTypes() 
    Authorizations()
    ' ResourceTypes()
    ' CredentialTypes()
    ' CredentialSchemas()
    ' PresentationRequests()
    ' Overlays()
    AssuranceLevels()
     
}

class Metadata {
    EGFURI: URI ' (duplicated above)
    TrustRegistryName: string
    RawAPIEndpoint: URL 
    ' AuthorityClaim: string 
    lastUpdated: datetime 
    namespaces: string[]
    

    ' Languages() 
}

' inheritance
EGF "1" -- "1" TrustRegistry


TrustRegistry <|-- Lookup 

package QueryDataObjects {
    

    class RegistryList
    class ResourceList
    class EntityList

    class Entity {
        entityVID: VID
        name: string
        metadata: object
        description: string 
        primaryTrustRegistry: VID
        registrationStatus: string
        registrationStatusDetail: string
        secondaryTrustRegistries[]
        authorizations[]: EntityAuthorizationList
        participatingNamespaces[]
        HasAuthorization(Authorization)
    }

    class EntityAuthorization {
        entityID: VID
        authorizationUniqueString: string
        authorizationID: VID
        description: string
        assuranceLevel: string
        status: AuthorizationStatus 
        statusDetail: string
        ' ValidityDatesType (TODO: remove type?)
        authorizationValidity: ValidityDatesType
    }

    object Registry {
        identifier: VID
        name: string
        peerType: enum
        description: string
        RecognizedNamespaces[]
    }
    object Resource {
        identifier: VID 
        lastUpdated: datetime
        datatype: string
        payloadJSON: JSON
        payloadURI: string
        integrity: Integrity
    }

    object Integrity

    enum AuthorizationStatus { 
        current, expired, terminated, revoked 
    }
}





package Lookups {
    package LookupLists {
        object NamespaceList
        object VIDTypeList
        object AssuranceLevelList
        object AuthorizationList      
    }

    object VIDType {
        VIDtype: string 
        maximumAssuranceLevel: AssuranceLevel
    }

    object Authorization {
        authorizationIdentifier: VID 
        authorization: string 
        description: string 
    }
  
    object Namespace {
        namespaceName: string
        namespaceID: VID
        description: string
        reference: URI
    }
    object AssuranceLevel {
        identifier: string
        name: string
    }

}


class ExportFile {
    Lookups.AssuranceLevels
    Lookups.VIDTypes
    Lookups.Authorizations
    Lookups.Namepaces 
    Entities: EntityList
    Registries: RegistryList
    Resources: ResourceList 
    Metadata 
    Validity
}

Class ValidityDatesType {
    validFromDT: datetime
    validtoDT: datetime
}

EntityList o-- "0..n" Entity
RegistryList  o-- "0..n" Registry
ResourceList  o-- "0..n" Resource 

Resource::integrity o-- "0..1" Integrity

Lookup::VIDTypes --> VIDTypeList
Lookup::Authorizations --> AuthorizationList
Lookup::AssuranceLevels --> AssuranceLevelList
Lookup::Namespaces --> NamespaceList

' Entity-related objects
Entity::Authorizations o-- "0...n" EntityAuthorization
EntityAuthorization::status --> AuthorizationStatus
EntityAuthorization::authorizationID --> Authorization 
EntityAuthorization::assuranceLevel --> AssuranceLevel


' METADATA related objects
TrustRegistry --> Metadata 
TrustRegistry::Entity --> Entity 
TrustRegistry::Registry --> Registry
TrustRegistry::Resource --> Resource
TrustRegistry::Registries --> RegistryList 
TrustRegistry::Resources --> ResourceList

' ExportFile::Validity --> ValidityDatesType

VIDTypeList o-- "1...n" VIDType 
AuthorizationList o-- "0...n" Authorization
NamespaceList o-- "0..n" Namespace



'' EXPORT FILE
TrustRegistry::OfflineCopy --> ExportFile



AssuranceLevelList o-- "0...n" AssuranceLevel


@enduml